[debug] [2020-12-07T19:04:04.942Z] ----------------------------------------------------------------------
[debug] [2020-12-07T19:04:04.944Z] Command:       /usr/local/bin/node /usr/local/bin/firebase init
[debug] [2020-12-07T19:04:04.944Z] CLI Version:   8.17.0
[debug] [2020-12-07T19:04:04.944Z] Platform:      darwin
[debug] [2020-12-07T19:04:04.944Z] Node Version:  v15.3.0
[debug] [2020-12-07T19:04:04.945Z] Time:          Tue Dec 08 2020 04:04:04 GMT+0900 (Korean Standard Time)
[debug] [2020-12-07T19:04:04.945Z] ----------------------------------------------------------------------
[debug] [2020-12-07T19:04:04.945Z] 
[debug] [2020-12-07T19:04:04.948Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-07T19:04:04.949Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/dps0340/firebase-auth-sample-page

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-12-07T19:04:09.809Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-12-07T19:04:10.678Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 07 Dec 2020 19:04:10 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project attendance-management-252a2 (attendance management) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2020-12-07T19:04:11.135Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/attendance-management-252a2/services/firebasedatabase.googleapis.com  
 
[debug] [2020-12-07T19:04:12.218Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 07 Dec 2020 19:04:12 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2020-12-07T19:04:12.220Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/attendance-management-252a2/locations/-/instances/attendance-management-252a2  
 
[debug] [2020-12-07T19:04:13.038Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 07 Dec 2020 19:04:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2020-12-07T19:04:26.361Z] >>> HTTP REQUEST GET https://attendance-management-252a2.firebaseio.com/.settings/rules.json  
 
[debug] [2020-12-07T19:04:26.936Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 07 Dec 2020 19:04:26 GMT","content-type":"application/json; charset=utf-8","content-length":"63","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for attendance-management-252a2 have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[info] ✔  Wrote public/404.html 
[debug] [2020-12-07T19:04:40.499Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-12-07T19:04:40.754Z] <<< HTTP RESPONSE 200 {"accept-ranges":"bytes","vary":"Accept-Encoding, Origin","content-type":"application/json","cross-origin-resource-policy":"cross-origin","content-length":"1411","date":"Mon, 07 Dec 2020 18:24:08 GMT","expires":"Mon, 07 Dec 2020 19:14:08 GMT","last-modified":"Fri, 04 Dec 2020 02:12:08 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","cache-control":"public, max-age=3000","age":"2432","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""}
[info] ✔  Wrote public/index.html 
[info] 
[info] i  Detected a .git folder at /Users/dps0340/firebase-auth-sample-page 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=482770521&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2020-12-07T19:05:03.890Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"b54dfb063a6ae598fd43","redirect_uri":"http://localhost:9005","state":"482770521"}
[debug] [2020-12-07T19:05:04.332Z] <<< HTTP RESPONSE 200 {"date":"Mon, 07 Dec 2020 19:05:04 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","server":"GitHub.com","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With, Accept-Encoding","etag":"W/\"c6e15c946b01e1285443650e2395e8a5\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker.js gist.github.com/socket-worker.js","x-github-request-id":"C7DE:6DE5:CB2C0A:11BC9F8:5FCE7CE0"}
[debug] [2020-12-07T19:05:04.333Z] >>> HTTP REQUEST GET https://api.github.com/user  
 
[debug] [2020-12-07T19:05:04.789Z] <<< HTTP RESPONSE 200 {"date":"Mon, 07 Dec 2020 19:05:04 GMT","content-type":"application/json; charset=utf-8","content-length":"1465","server":"GitHub.com","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With, Accept-Encoding","etag":"\"845e0f5765fadb6756045f292b37860ca3a822382ad2f867c03deb83ff8debd7\"","last-modified":"Mon, 07 Dec 2020 19:05:02 GMT","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4980","x-ratelimit-reset":"1607370282","x-ratelimit-used":"20","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"C7DF:3026:72366F:972234:5FCE7CE0"}
[info] 
[info] ✔  Success! Logged into GitHub as DPS0340 
[info] 
[debug] [2020-12-07T19:25:07.168Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:162:15)
    at writeGeneric (node:internal/stream_base_commons:153:3)
    at WriteStream.Socket._writeGeneric (node:net:769:11)
    at WriteStream.Socket._write (node:net:781:8)
    at writeOrBuffer (node:internal/streams/writable:388:12)
    at WriteStream.Writable.write (node:internal/streams/writable:333:10)
    at MuteStream.ondata (node:internal/streams/legacy:20:31)
    at MuteStream.emit (node:events:376:20)
    at MuteStream.EventEmitter.emit (node:domain:470:12)
    at MuteStream.write (/usr/local/lib/node_modules/firebase-tools/node_modules/mute-stream/mute.js:121:8)
    at Object.exports.clearLine (/usr/local/lib/node_modules/firebase-tools/node_modules/inquirer/lib/utils/readline.js:50:13)
    at ScreenManager.clean (/usr/local/lib/node_modules/firebase-tools/node_modules/inquirer/lib/utils/screen-manager.js:100:10)
    at ScreenManager.render (/usr/local/lib/node_modules/firebase-tools/node_modules/inquirer/lib/utils/screen-manager.js:27:10)
    at InputPrompt.render (/usr/local/lib/node_modules/firebase-tools/node_modules/inquirer/lib/prompts/input.js:67:17)
    at InputPrompt.onKeypress (/usr/local/lib/node_modules/firebase-tools/node_modules/inquirer/lib/prompts/input.js:107:10)
    at SafeSubscriber._next (/usr/local/lib/node_modules/firebase-tools/node_modules/rxjs/internal/Observable.js:66:21)
[error] 
[error] Error: An unexpected error has occurred.
